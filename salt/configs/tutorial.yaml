name: GN2

model:
  lrs_config:
    initial: 1e-7
    max: 5e-4
    end: 1e-5
    pct_start: 0.01
    weight_decay: 1e-5

  model:
    class_path: salt.models.SaltModel
    init_args:
      init_nets:
        - input_name: tracks
          dense_config:
            output_size: &embed_dim 256
            hidden_layers: [256]
            activation: &activation ReLU

      encoder:
        class_path: salt.models.TransformerV2
        init_args:
          embed_dim: *embed_dim
          num_layers: 2
          out_dim: &out_dim 128
          attn_type: torch-math
          attn_kwargs:
            num_heads: 4
          dense_kwargs:
            activation: *activation
            gated: True
          num_registers: 8

      pool_net:
        class_path: salt.models.GlobalAttentionPooling
        init_args: { input_size: *out_dim }

      tasks:
        class_path: torch.nn.ModuleList
        init_args:
          modules:
            - class_path: salt.models.ClassificationTask
              init_args:
                name: jets_classification
                input_name: jets
                label: flavour_label
                loss:
                  class_path: torch.nn.CrossEntropyLoss
                  init_args: { weight: [1.0, 1.0, 1.0] }
                dense_config: &task_dense_config
                  input_size: *out_dim
                  output_size: 3
                  hidden_layers: [128, 64, 32]
                  activation: *activation

            - class_path: salt.models.ClassificationTask
              init_args:
                name: const_origin
                input_name: tracks
                label: truth_origin_label
                class_names: [pileup, primary, fromBC, fromB, fromC, fromS, fromTau*, secondary]
                weight: 0.5
                loss:
                  class_path: torch.nn.CrossEntropyLoss
                  init_args:
                    weight: [1.0, 25.47, 8.27, 13.17, 8.84, 4.9, 11985.94, 1.25]
                dense_config:
                  <<: *task_dense_config
                  output_size: 8
                  context_size: *out_dim

            - class_path: salt.models.VertexingTask
              init_args:
                name: const_vertexing
                input_name: tracks
                label: truth_vertex_idx
                weight: 1.5
                loss:
                  class_path: torch.nn.BCEWithLogitsLoss
                  init_args: { reduction: none }
                dense_config:
                  <<: *task_dense_config
                  input_size: 256
                  output_size: 1
                  context_size: *out_dim

data:
  input_map:
    jets: jets
    tracks: consts
  global_object: jets
  variables:
    jets:
      - pt
      - eta
    tracks:
      - d0
      - z0
      - phi_rel
      - eta_rel
      - dr
      - pt_frac
      - charge
      - signed_2d_ip
      - signed_3d_ip

  train_file: <path to directory>/pp_output_train.h5
  val_file: <path to directory>/pp_output_val.h5
  norm_dict: <path to directory>/norm_dict.yaml
  class_dict: <path to directory>/class_dict.yaml

  num_train: 100_000
  num_val: 10_000
  num_test: 10_000

  batch_size: 400
  num_workers: 10

trainer:
  max_epochs: 20
  accelerator: gpu
  devices: 1
  precision: 16-mixed
