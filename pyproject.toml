[project]
name = "salt-ml"
description = "Multimodal and Multiclass Machine Learning for High Energy Physics"
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.10,<3.12"
dynamic = ["version", "dependencies", "optional-dependencies"]

[project.urls]
"Homepage" = "https://gitlab.cern.ch/atlas-flavor-tagging-tools/algorithms/salt"
"Issue Tracker" = "https://gitlab.cern.ch/atlas-flavor-tagging-tools/algorithms/salt/-/issues"

[project.scripts]
salt = "salt.main:main"
to_onnx = "salt.onnx.to_onnx:main"
get_onnx_metadata = "salt.utils.get_onnx_metadata:main"
compare_models = "salt.utils.compare_models:main"
repair_ckpt = "salt.utils.repair_ckpt:main"
setup_muP = "salt.utils.muP_utils.main_muP:main"
download_S3 = "salt.utils.file_utils:download_from_S3"

[tool.setuptools]
packages = ["salt"]
include-package-data = true

[tool.setuptools.dynamic]
version = { attr = "salt.__version__" }
dependencies = { file = ["requirements.txt"] }

[tool.setuptools.dynamic.optional-dependencies]
muP = { file = ["requirements-muP.txt"] }
flash = { file = ["requirements-flash.txt"] }

[build-system]
requires = ["setuptools>=62"]
build-backend = "setuptools.build_meta"

[tool.ruff]
line-length = 100
preview = true
lint.select = ["ALL", "D212", "D417"]
lint.ignore = [
    "COM", "D100", "D101", "D102", "D103", "D104", "D105", "D205", "D401", "EM", "FIX", "FBT",
    "S101", "S404", "S602", "PLR2004", "PLR0912", "PLR0913", "PLR0914", "PLR0915", "PLR0917",
    "PLC0415", "G004", "PD901", "N802", "C901", "DTZ005", "DTZ007", "INP", "EXE002", "TD002", 
    "ANN001", "ANN002", "ANN003", "ANN101", "ANN201", "ANN202", "ANN204", "CPY001", "TRY003", "PLR1702",
    "N803", "N806", "N812", "T201", "PLW1514", "PTH123", "RUF015", "RUF017", "PLR6301", "ERA", "ISC001", 
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.pytest.ini_options]
log_cli = true
log_cli_level = "CRITICAL"
filterwarnings = ["ignore::DeprecationWarning"]

[tool.coverage.report]
omit = ["**/muP_utils/*"]
