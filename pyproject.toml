[project]
name = "salt-ml"
description = "Multimodal and Multiclass Machine Learning for High Energy Physics"
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.10,<3.12"
dynamic = ["version"]
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Operating System :: OS Independent",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
  "atlas-ftag-tools==0.2.17",
  "comet_ml>=3.49.7",
  "h5py>=3.14.0",
  "jsonargparse[signatures,argcomplete]>=4.32.0",
  "lightning==2.5.3",
  "lion-pytorch>=0.2.2",
  "numpy>=2.2.6",
  "onnx==1.16.2",
  "onnxruntime==1.20.1",
  "puma-hep==0.4.11",
  "rich>=14.1.0",
  "scipy>=1.15.3",
  "torch==2.5.1",
  "torchmetrics==1.5.2",
  "torchvision==0.20.1",
  "tqdm>=4.66.1",
  "umami-preprocessing==0.2.7",
]

[project.optional-dependencies]
dev = [
  "coverage>=7.10.6",
  "ipykernel>=6.30.1",
  "mypy>=1.18.1",
  "pre-commit>=4.3.0",
  "pydoclint>=0.7.3",
  "pytest_notebook>=0.10.0",
  "pytest-cov>=7.0.0",
  "pytest-randomly>=4.0.1",
  "pytest>=8.4.2",
  "ruff>=0.13.0",
]
muP = [
  "aiobotocore==2.24.2",
  "boto3==1.40.18",
  "botocore==1.40.18",
  "mup>=1.0.0",
  "s3fs==2024.10.0",
  "s3path>=0.5.0",
  "tensorboard>=2.14.1",
]
flash = [
  "flash-attn>=2.5.7",
  "ninja>=1.11.1.1",
  "packaging",
  "wheel",
]

[project.urls]
"Homepage" = "https://gitlab.cern.ch/atlas-flavor-tagging-tools/algorithms/salt"
"Issue Tracker" = "https://gitlab.cern.ch/atlas-flavor-tagging-tools/algorithms/salt/-/issues"

[project.scripts]
salt = "salt.main:main"
to_onnx = "salt.onnx.to_onnx:main"
get_onnx_metadata = "salt.utils.get_onnx_metadata:main"
compare_models = "salt.utils.compare_models:main"
repair_ckpt = "salt.utils.repair_ckpt:main"
setup_mup = "salt.utils.mup_utils.main_mup:main"
download_S3 = "salt.utils.file_utils:download_from_S3"

[tool.setuptools]
packages = { find = { include = ["salt*"] } }
include-package-data = true

[tool.setuptools.dynamic]
version = { attr = "salt.__version__" }

[build-system]
requires = ["setuptools>=62"]
build-backend = "setuptools.build_meta"

[tool.ruff]
line-length = 100
preview = true
lint.select = ["ALL"]
lint.ignore = [
  "COM", "D100", "D102", "D105", "D205", "D401", "EM", "FIX", "FBT",
  "S101", "S404", "S602", "PLR2004", "PLR0912", "PLR0914", "CPY001", "TRY003",
  "G004", "N802", "C901", "DTZ005", "DTZ007", "INP", "EXE002",
  "ANN001", "ANN002", "ANN003", "ANN201", "ANN202", "ANN204",
  "T201", "PLW1514", "PTH123", "RUF017", "PLR6301", "ISC001", "S307",
  "PT027", "NPY002", "PT009", "PLW1641", "PLR0904", "N817", "S603", "PD011",
  "S113", "TCH", "PT011", "PLR1702", "S108", "PTH207", "S607", "E203", "SIM115", "PLR0913",
  "PLR0917", "A005", "ANN401", "PLR0915", "RUF015", "PLR6104", "TD003",
]
exclude = [
  "salt/tests/*",
  "salt/utils/muP_utils/*",
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.ruff.lint.per-file-ignores]
"salt/tests/**" = ["D100", "D101", "D102", "D103", "D104", "D105", "PT019"]

[tool.mypy]
exclude = '^salt/tests/.*\.py$'

[tool.pytest.ini_options]
log_cli = true
log_cli_level = "CRITICAL"
filterwarnings = ["ignore::DeprecationWarning"]

[tool.coverage.report]
omit = ["**/mup_utils/*"]
